---
import { Image } from 'astro:assets';
import 'swiper/css';
import EventCard from './event-card.astro';

interface EventProp {
  id: string;
  title: string;
  image: string;
  start: string;
  end: string;
  type: string;
}

interface Props {
  title: string;
  events: EventProp[];
  id: string;
}

const { title, events, id } = Astro.props;
---

<style>
  .swiper {
    width: 100%;
    height: 100%;

    @media (min-width: 768px) {
      overflow: visible;
    }
  }

  .swiper-container {
    @media (min-width: 768px) {
      gap: 1rem;
    }
  }

  .swiper-slide {
    display: flex !important;
    justify-content: center;
    align-items: center;
    width: 184px !important;
    height: auto !important;

    @media (min-width: 768px) {
      width: 33.333% !important;
      padding: 0 0.5rem;
      /* width: 295px !important; */

      &:first-child {
        padding-left: 0;
      }

      &:last-child {
        padding-right: 0;
      }
    }
  }

  .carousel-navigation {
    position: absolute;
    top: 50%;
    right: 0;
    left: 0;
    padding: 0 1rem;
    z-index: 50;
    width: 100%;
    display: flex;
    justify-content: space-between;

    & > button:disabled {
      display: none;
    }

    @media (min-width: 768px) {
      display: none;
    }
  }
</style>

<events-carousel data-id={id}>
  <div
    id={id}
    class="events-carousel container mx-auto p-4 flex flex-col gap-8 relative"
  >
    <div class="flex gap-4 justify-between">
      <h1 class="text-primary text-lg font-bold lg:text-3xl">{title}</h1>
      <div class="flex flex-wrap gap-4 justify-center">
        <a
          href="/eventos"
          class="btn-category text-dm-gray-2 border border-dm-gray-2 rounded-md px-4 py-2 text-sm hover:border-primary hover:text-primary"
        >
          Ver todos los eventos
        </a>
      </div>
    </div>

    {
      (
        <div class="category-content h-full" id={`${id}-events`}>
          <div class="carousel-navigation">
            <button class="button-prev" type="button">
              <Image
                src="/assets/img/prev.svg"
                alt="prev"
                width="30"
                height="30"
                loading="eager"
              />
            </button>
            <button class="button-next" type="button">
              <Image
                src="/assets/img/next.svg"
                alt="next"
                width="30"
                height="30"
                loading="eager"
              />
            </button>
          </div>
          <div class="max-w-[calc(100vw_-_3rem)] sm:w-full overflow-hidden h-full lg:overflow-visible">
            <div class="swiper">
              <div class="swiper-wrapper">
                {events
                  .slice(0, 3)
                  .map(({ id, title, image, start, end, type }) => (
                    <div class="swiper-slide">
                      <EventCard
                        id={id}
                        title={title}
                        image={image}
                        start={start}
                        end={end}
                        type={type}
                      />
                    </div>
                  ))}
              </div>
            </div>
          </div>
        </div>
      )
    }
  </div>
</events-carousel>

<script type="module" is:inline>
  import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.mjs';

  class EventsCarousel extends HTMLElement {
    constructor() {
      super();

      const id = this.dataset.id;

      new Swiper(`#${id}-events .swiper`, {
        speed: 500,
        navigation: {
          nextEl: `#${id}-events .button-next`,
          prevEl: `#${id}-events .button-prev`,
        },
        centeredSlides: false,
        slidesPerView: 'auto',
        spaceBetween: 15,
        draggable: false,
        breakpoints: {
          768: {
            slidesPerView: 3,
            centeredSlides: false,
            enabled: false,
            spaceBetween: 0,
          },
        },
      });
    }
  }

  customElements.get('events-carousel') ||
    customElements.define('events-carousel', EventsCarousel);
</script>
